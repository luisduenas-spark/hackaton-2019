@model hackaton_2019.ViewModel.ConceptosViewModel
@using hackaton_2019.Models
@{
    ViewBag.Title = "Index";
}
@{
    List<Cultivo> cultivos = (List<Cultivo>)Session["superficie"];
    List<ConceptoDetalle> conceptosDetalle = (List<ConceptoDetalle>)Session["conceptosDetalles"];
}
<div class="breadcrumbs">
    <div class="breadcrumbs-inner">
        <div class="row m-0">
            <div class="col-sm-4">
                <div class="page-header float-left">
                    <div class="page-title">
                        <h1>Bienvenido Missael Padilla</h1>
                    </div>
                </div>
            </div>
            <div class="col-sm-8" style="padding-right:0;">
                <div class="float-right">
                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#miModal"><i class="fa fa-plus"></i>&nbsp; Agregar Cultivo</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="content">
    <div class="animated fadeIn">

        <div class="row">
            <div class="col-sm-12 mb-4">
                <div class="card-group">
                    <div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-pagelines"></i>
                            </div>
                            <div class="h4 mb-0">
                                <span class="count">@cultivos.Sum(s => s.Superficie)</span> m2
                            </div>

                            <small class="text-muted text-uppercase font-weight-bold">Superficie Total</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-1" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>
                    <div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-warning"></i>
                            </div>
                            <div class="h4 mb-0">

                                @if (cultivos != null)
                                {
                                    <span class="count">@cultivos.Count</span>
                                }
                                else
                                {
                                    <span class="count">0</span>
                                }
                            </div>
                            <small class="text-muted text-uppercase font-weight-bold">Cultivos</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-2" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>
                    <div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-dollar"></i>
                            </div>
                            <div class="h4 mb-0">
                                $<span class="count">@conceptosDetalle.Sum(s => s.Inversion)</span>
                            </div>
                            <small class="text-muted text-uppercase font-weight-bold">Inversion Total</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-3" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>
                    @*<div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-bug"></i>
                            </div>
                            <div class="h4 mb-0">
                                <span class="count">28</span>%
                            </div>
                            <small class="text-muted text-uppercase font-weight-bold">Control de plaga</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-4" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>*@
                    <div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-thermometer"></i>
                            </div>
                            <div class="h4 mb-0">40&#176;</div>
                            <small class="text-muted text-uppercase font-weight-bold">Temperatura actual</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-5" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>
                    <div class="card col-md-6 no-padding ">
                        <div class="card-body">
                            <div class="h1 text-muted text-right mb-4">
                                <i class="fa fa-comments-o"></i>
                            </div>
                            <div class="h4 mb-0">
                                <span class="count">4</span>
                            </div>
                            <small class="text-muted text-uppercase font-weight-bold">Notificaciones</small>
                            <div class="progress progress-xs mt-3 mb-0 bg-flat-color-1" style="width: 40%; height: 5px;"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-sm-12 mb-4">
                <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                    <ol class="carousel-indicators">
                        @foreach (hackaton_2019.Models.NewsResponse noticia in Model.NewsResponses)
                        {
                            if (Model.NewsResponses.IndexOf(noticia) == 0)
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@Model.NewsResponses.IndexOf(noticia)" class="active"></li>
                            }
                            else
                            {
                                <li data-target="#carouselExampleIndicators" data-slide-to="@Model.NewsResponses.IndexOf(noticia)"></li>
                            }
                        }
                    </ol>
                    <div class="carousel-inner">
                        @foreach (hackaton_2019.Models.NewsResponse noticia in Model.NewsResponses)
                        {

                            if (Model.NewsResponses.IndexOf(noticia) == 0)
                            {
                                <div class="carousel-item active">
                                    <img class="d-block w-100" src="http://whfarmbureau.org/slides/06.jpg">
                                    <div class="carousel-caption left-caption text-left">
                                        <h4>@noticia.Subject</h4>
                                        <p>@noticia.Summary</p>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item">
                                    <img class="d-block w-100" src="http://www.spartanburgconservation.org/images/made/assets/img/ul/Cleveland_Preserve_blooming_grasses_4.14.16_1000_300_c1__0_.jpg">
                                    <div class="carousel-caption left-caption text-left">
                                        <h4>@noticia.Subject</h4>
                                        <p>@noticia.Summary</p>
                                    </div>
                                </div>
                            }

                        }
                        @*<div class="carousel-item active">
                                <img class="d-block w-100" src="https://picsum.photos/1200/300" alt="First slide">
                                <div class="carousel-caption left-caption text-left">
                                    <h1>Algodon News</h1>
                                    <p>Con el inicio de la cosecha y la aproximación del cierre del cultivo algodonero del ciclo agrícola primavera-verano 2018, la Delegación Estatal de la Secretaría de Agricultura, Ganadería, Desarrollo Rural, Pesca y Alimentación (SAGARPA) recomienda a los productores del Valle de Mexicali, la realización puntual de las labores culturales del cultivo, con la finalidad de continúan manteniendo el estatus fitosanitario de la fibra blanca.</p>
                                </div>
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="https://picsum.photos/1200/300" alt="Second slide">
                                <div class="carousel-caption">
                                    <h3>Clima News</h3>
                                    <p>Noticias sobre el clima en la region</p>
                                </div>
                            </div>
                            <div class="carousel-item">
                                <img class="d-block w-100" src="https://picsum.photos/1200/300" alt="Third slide">
                                <div class="carousel-caption">
                                    <h3>Otros News</h3>
                                    <p>Noticias sobre la region</p>
                                </div>
                            </div>*@
                    </div>
                    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>

            </div>
        </div>
    </div>
</div>



<div class="content">
    <div class="animated fadeIn">

        <div class="row">
            @if (cultivos != null)
            {
                foreach (var item in cultivos)
                {
                    string background = "bg-warning";
                    string icono = "fa-envira";

                    switch (item.TipoCultivo.ToLower())
                    {
                        case "algodón":
                            icono = "fa-envira";
                            background = "bg-warning";
                            break;
                        case "alfalfa":
                            icono = "fa-leaf";
                            background = "blue-bg";
                            break;
                    }
                    <div class="col-md-4">
                        <a href="@Url.Action("Index", "DetalleInversion")">
                            <section class="card">
                                <div class="twt-feed @background">
                                    <div class="corner-ribon black-ribon">
                                        <i class="fa @icono"></i>
                                    </div>
                                    <div class="fa @icono wtt-mark"></div>

                                    <div class="media">
                                        <div class="media-body">
                                            <h2 class="text-white display-6">@item.Nombre</h2>
                                            <p class="text-light">@item.TipoCultivo</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="weather-category twt-category">
                                    <ul>
                                        <li class="active">
                                            <h5>Riego</h5>
                                            20/01/19
                                        </li>
                                        <li>
                                            <h5>Fertilizacion</h5>
                                            10/01/19
                                        </li>
                                        <li>
                                            <h5>Humedad</h5>
                                            50%
                                        </li>
                                    </ul>
                                </div>
                                <footer class="twt-footer">
                                    <i class="fa fa-map-marker"></i>
                                    Mexicali, BC
                                    <span class="pull-right">
                                        32&#176;
                                    </span>
                                </footer>
                            </section>
                        </a>
                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="modal fade" id="miModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title" id="myModalLabel">Agregar Cultivo</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Cultivos.Nombre, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Cultivos.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cultivos.Nombre, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Tipo Cultivo", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @{
                                    List<TipoCultivo> list = new List<TipoCultivo>();
                                    list = (List<TipoCultivo>)Session["cultivos"];

                                    List<SelectListItem> selectListItems = new List<SelectListItem>();
                                    foreach (var item in list)
                                    {

                                        selectListItems.Add(new SelectListItem { Text = item.Nombre, Value = item.Nombre });
                                    }
                                }
                                @Html.DropDownListFor(model => model.Cultivos.TipoCultivo, selectListItems, "Select status")
                                @Html.ValidationMessageFor(model => model.Cultivos.TipoCultivo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.Label("Fecha Inicio", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Cultivos.FechaInicio, new { @class = "form-control datefield", @placeholder = "dd/mm/yyyy" })
                                @Html.ValidationMessageFor(model => model.Cultivos.FechaInicio, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cultivos.Superficie, htmlAttributes: new { @class = "control-label col-md-8" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Cultivos.Superficie, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cultivos.Superficie, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cultivos.Coordenadas, htmlAttributes: new { @class = "control-label col-md-6" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Cultivos.Coordenadas, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cultivos.Coordenadas, "", new { @class = "text-danger" })
                                <a href="https://agromonitoring.com/create-polygon" target="_blank">Generar Coordenadas</a>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Agregar" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
                @*@using (Html.BeginForm())
                    {
                    <div>
                        @Html.EditorFor(model => model.FechaRegistro, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    }*@
            </div>
        </div>
    </div>
</div>

